@ECHO OFF
REM
REM build_openmvg.bat
REM
REM Compile and install openMVG
REM
REM Version 1.0, 04.01.2017

REM Save path to this script
SET SB_SCRIPT_PATH=%~dp0

REM Get paths and variables
CALL set_paths.bat
CALL set_vars.bat
CALL libs_versions.bat

REM Check distributable file is present
REM IF NOT EXIST %SB_DOWNLOAD_PATH%\%SB_OPENMVG_FILENAME% (
REM 	ECHO File %SB_OPENMVG_FILENAME% not found. Please download it and put it into the download folder %SB_DOWNLOAD_PATH%.
REM 	pause
REM 	EXIT /B 1
REM )

REM Set Visual Studio environment
CALL %SB_VSTUDIO_PATH%\vcvarsall.bat %SB_VSTUDIO_ARCHITECTURE%

REM Set path
SET PATH=%PATH%;%SB_CMAKE_PATH%;%SB_NINJA_PATH%;%SB_7ZIP_PATH%;%SB_MSYS2_PATH%

REM Delete source directory
CD %SB_SOURCE_PATH%
REM CALL %SB_UTIL_SCRIPTS_PATH%\fast_rmdir.bat %SB_OPENMVG_PATH%
REM IF ERRORLEVEL 1 GOTO error_exit

REM Extract source
REM 7z x %SB_DOWNLOAD_PATH%\%SB_OPENMVG_FILENAME%

REM Convert paths to cmake (backslashes to forward slashes)
SET "SB_INSTALL_PATH_FWD=%SB_INSTALL_PATH:\=/%"
SET "SB_SOURCE_PATH_FWD=%SB_SOURCE_PATH:\=/%"

REM Delete old build directories
CD %SB_BUILD_PATH%
CALL %SB_UTIL_SCRIPTS_PATH%\fast_rmdir.bat openmvg_build_rel
IF ERRORLEVEL 1 GOTO error_exit
CALL %SB_UTIL_SCRIPTS_PATH%\fast_rmdir.bat openmvg_build_deb
IF ERRORLEVEL 1 GOTO error_exit

REM Create build directory
MKDIR openmvg_build_rel
IF ERRORLEVEL 1 GOTO error_exit
CD openmvg_build_rel

REM Call CMake
cmake -Wno-dev -G "Ninja" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_DEBUG_POSTFIX="_d" -DOpenMVG_BUILD_SHARED=OFF -DOpenMVG_BUILD_TESTS=OFF -DOpenMVG_BUILD_DOC=OFF -DOpenMVG_BUILD_EXAMPLES=OFF -DOpenMVG_BUILD_SOFTWARES=OFF -DOpenMVG_BUILD_COVERAGE=OFF -DOpenMVG_USE_OPENMP=ON -DTARGET_ARCHITECTURE="generic" -DEIGEN_INCLUDE_DIR_HINTS=%SB_INSTALL_PATH_FWD%/include/eigen3 -DCERES_DIR_HINTS=%SB_INSTALL_PATH_FWD% -DFLANN_INCLUDE_DIR_HINTS=%SB_INSTALL_PATH_FWD%/include/ -DCMAKE_PREFIX_PATH=%SB_INSTALL_PATH_FWD% -DZLIB_ROOT=%SB_INSTALL_PATH_FWD% -DPNG_PNG_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DPNG_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/libpng16_static.lib -DTIFF_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DTIFF_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/tiff.lib -DJPEG_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DJPEG_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/jpeg.lib -DZLIB_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/zlibstatic.lib -DCMAKE_INSTALL_PREFIX=%SB_INSTALL_PATH_FWD% %SB_SOURCE_PATH_FWD%/%SB_OPENMVG_PATH%/src 2>&1 | tee cmake_output.txt 
REM cmake -Wno-dev -G "Visual Studio 14 Win64" -DCMAKE_CONFIGURATION_TYPES=Release;RelWithDebInfo;Debug -DCMAKE_DEBUG_POSTFIX="_d" -DOpenMVG_BUILD_SHARED=OFF -DOpenMVG_BUILD_TESTS=OFF -DOpenMVG_BUILD_DOC=OFF -DOpenMVG_BUILD_EXAMPLES=OFF -DOpenMVG_BUILD_SOFTWARES=ON -DOpenMVG_BUILD_COVERAGE=OFF -DOpenMVG_USE_OPENMP=ON -DTARGET_ARCHITECTURE="generic" -DEIGEN_INCLUDE_DIR_HINTS=%SB_INSTALL_PATH_FWD%/include/eigen3 -DCERES_DIR_HINTS=%SB_INSTALL_PATH_FWD% -DFLANN_INCLUDE_DIR_HINTS=%SB_INSTALL_PATH_FWD%/include/ -DCMAKE_PREFIX_PATH=%SB_INSTALL_PATH_FWD% -DZLIB_ROOT=%SB_INSTALL_PATH_FWD% -DPNG_PNG_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DPNG_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/libpng16_static.lib -DTIFF_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DTIFF_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/tiff.lib -DJPEG_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DJPEG_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/jpeg.lib -DZLIB_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/zlibstatic.lib -DCMAKE_INSTALL_PREFIX=%SB_INSTALL_PATH_FWD% %SB_SOURCE_PATH_FWD%/%SB_OPENMVG_PATH%/src 2>&1 | tee cmake_output.txt 
IF ERRORLEVEL 1 GOTO error_exit

REM Call Ninja
ninja -j 2 all 2>&1 | tee ninja_all_output.txt 
IF ERRORLEVEL 1 GOTO error_exit
ninja install 2>&1 | tee ninja_install_output.txt 
IF ERRORLEVEL 1 GOTO error_exit

CD %SB_BUILD_PATH%

REM Create build directory
MKDIR openmvg_build_deb
IF ERRORLEVEL 1 GOTO error_exit
CD openmvg_build_deb

REM Call CMake
cmake -Wno-dev -G "Ninja" -DCMAKE_BUILD_TYPE="Debug" -DCMAKE_DEBUG_POSTFIX="_d" -DOpenMVG_BUILD_SHARED=OFF -DOpenMVG_BUILD_TESTS=OFF -DOpenMVG_BUILD_DOC=OFF -DOpenMVG_BUILD_EXAMPLES=OFF -DOpenMVG_BUILD_SOFTWARES=OFF -DOpenMVG_BUILD_COVERAGE=OFF -DOpenMVG_USE_OPENMP=ON -DTARGET_ARCHITECTURE="generic" -DEIGEN_INCLUDE_DIR_HINTS=%SB_INSTALL_PATH_FWD%/include/eigen3 -DCERES_DIR_HINTS=%SB_INSTALL_PATH_FWD% -DFLANN_INCLUDE_DIR_HINTS=%SB_INSTALL_PATH_FWD%/include/ -DCMAKE_PREFIX_PATH=%SB_INSTALL_PATH_FWD% -DZLIB_ROOT=%SB_INSTALL_PATH_FWD% -DPNG_PNG_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DPNG_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/libpng16_static.lib -DTIFF_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DTIFF_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/tiff.lib -DJPEG_INCLUDE_DIR=%SB_INSTALL_PATH_FWD%/include -DJPEG_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/jpeg.lib -DZLIB_LIBRARY=%SB_INSTALL_PATH_FWD%/lib/zlibstatic.lib -DCMAKE_INSTALL_PREFIX=%SB_INSTALL_PATH_FWD% %SB_SOURCE_PATH_FWD%/%SB_OPENMVG_PATH%/src 2>&1 | tee cmake_output.txt 
IF ERRORLEVEL 1 GOTO error_exit

REM Call Ninja
ninja -j 2 all 2>&1 | tee ninja_all_output.txt 
IF ERRORLEVEL 1 GOTO error_exit
ninja install 2>&1 | tee ninja_install_output.txt 
IF ERRORLEVEL 1 GOTO error_exit

pause
exit

:error_exit
ECHO Error occurred, exiting
pause

